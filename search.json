[{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"installation-and-use","dir":"Articles","previous_headings":"","what":"Installation and use","title":"Discovery and retrieval","text":"package available Bioconductor version 3.15 later. following code installs cellxgenedp Bioconductor Alternatively, install ‘development’ version GitHub (see GitHub.io current documentation) also install additional packages required vignette, use Load package current R session. make extensive use dplyr packages, end vignette use SingleCellExperiment zellkonverter, load well.","code":"if (!\"BiocManager\" %in% rownames(installed.packages()))     install.packages(\"BiocManager\", repos = \"https://CRAN.R-project.org\") BiocManager::install(\"cellxgenedp\") if (!\"remotes\" %in% rownames(installed.packages()))     install.packages(\"remotes\", repos = \"https://CRAN.R-project.org\") remotes::install_github(\"mtmorgan/cellxgenedp\") pkgs <- c(\"tidyr\", \"zellkonverter\", \"SingleCellExperiment\", \"HDF5Array\") required_pkgs <- pkgs[!pkgs %in% rownames(installed.packages())] BiocManager::install(required_pkgs) library(zellkonverter) library(SingleCellExperiment) # load early to avoid masking dplyr::count() library(dplyr) library(cellxgenedp)"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"cxg-provides-a-shiny-interface","dir":"Articles","previous_headings":"","what":"cxg() Provides a ‘shiny’ interface","title":"Discovery and retrieval","text":"following sections outline use cellxgenedp package R script; functionality also available cxg() shiny application, providing easy way identify, download, visualize one several datasets. Start app choose project first tab, dataset visualization, one datasets download!","code":"cxg()"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"collections-datasets-and-files","dir":"Articles","previous_headings":"","what":"Collections, datasets and files","title":"Discovery and retrieval","text":"Retrieve metadata resources available cellxgene data portal using db(): Printing db object provides brief overview available data, well hints, form functions like collections(), exploration. portal organizes data hierarchically, ‘collections’ (research studies, approximately), ‘datasets’, ‘files’. Discover data using corresponding functions. resources unique primary identifier (e.g., file_id) well identifier describing relationship resource components database (e.g., dataset_id). identifiers can used ‘join’ information across tables.","code":"db <- db() db ## cellxgene_db ## number of collections(): 227 ## number of datasets(): 1473 ## number of files(): 2693 collections(db) ## # A tibble: 227 × 18 ##    collection_id    collection_version_id collection_url consortia contact_email ##    <chr>            <chr>                 <chr>          <list>    <chr>         ##  1 4828d33d-fb26-4… 3892863c-7057-4a32-a… https://cellx… <chr [1]> anna.molofsk… ##  2 48259aa8-f168-4… 67e75752-53dd-4aec-9… https://cellx… <lgl [1]> wtk22@cam.ac… ##  3 6e067060-f7e4-4… 37be1b6a-2d00-4b28-a… https://cellx… <lgl [1]> William.Zach… ##  4 1ca90a2d-2943-4… 1cb67a11-55b0-4416-9… https://cellx… <chr [2]> edl@allenins… ##  5 31937775-0602-4… e79f335e-ff6b-4c01-8… https://cellx… <lgl [1]> weallen@fas.… ##  6 34f12de7-c5e5-4… 375b0e1c-19d6-42b9-a… https://cellx… <chr [1]> ganier.clari… ##  7 48d354f5-a5ca-4… 8216eda1-79ae-4faf-9… https://cellx… <chr [1]> Nathan.Salom… ##  8 28e9d721-6816-4… c152fcf5-a85a-46c4-9… https://cellx… <lgl [1]> Tom_Mariani@… ##  9 9c8808ce-1138-4… e3c1e670-8e51-499f-a… https://cellx… <lgl [1]> ebutcher@sta… ## 10 37f1f46d-6dfa-4… 731ffc35-11c3-4236-8… https://cellx… <lgl [1]> ecker@salk.e… ## # ℹ 217 more rows ## # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, ## #   description <chr>, doi <chr>, links <list>, name <chr>, ## #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, ## #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date> datasets(db) ## # A tibble: 1,473 × 33 ##    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition ##    <chr>        <chr>              <chr>         <list>   <list> <list>          ##  1 5dec4249-84… dea35fd3-c576-4ca… 4828d33d-fb2… <chr>    <list> <lgl [1]>       ##  2 be35c935-ee… 15248da6-b817-403… 48259aa8-f16… <chr>    <list> <chr [1]>       ##  3 975e13b6-be… b2c407a9-4915-4d1… 48259aa8-f16… <chr>    <list> <chr [1]>       ##  4 55003f67-c4… c769bb55-b211-46a… 48259aa8-f16… <chr>    <list> <lgl [1]>       ##  5 24ec2dc5-35… 872b9ff1-86e9-4a7… 48259aa8-f16… <chr>    <list> <chr [1]>       ##  6 0ba636a1-47… 5a611776-aae0-41b… 48259aa8-f16… <chr>    <list> <chr [1]>       ##  7 2e877cd3-55… 5596ac91-b10e-4d8… 6e067060-f7e… <chr>    <list> <lgl [1]>       ##  8 fc0ceb80-d2… f94214e6-b6af-4ed… 1ca90a2d-294… <chr>    <list> <chr [1]>       ##  9 f67f2cfa-ba… 2cc3894f-09be-4af… 1ca90a2d-294… <chr>    <list> <chr [1]>       ## 10 eec3e37d-ed… cb6f7da3-3c1d-449… 1ca90a2d-294… <chr>    <list> <chr [1]>       ## # ℹ 1,463 more rows ## # ℹ 27 more variables: cell_count <int>, cell_type <list>, citation <chr>, ## #   default_embedding <chr>, development_stage <list>, disease <list>, ## #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, ## #   feature_count <int>, feature_reference <list>, is_primary_data <list>, ## #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, ## #   raw_data_location <chr>, schema_version <chr>, … files(db) ## # A tibble: 2,693 × 4 ##    dataset_id                              filesize filetype url                 ##    <chr>                                      <dbl> <chr>    <chr>               ##  1 5dec4249-8459-4df0-8998-37193135754c   239645451 H5AD     https://datasets.c… ##  2 5dec4249-8459-4df0-8998-37193135754c   241723366 RDS      https://datasets.c… ##  3 be35c935-ee4f-475c-9d3c-97630d59a735  3555862131 H5AD     https://datasets.c… ##  4 be35c935-ee4f-475c-9d3c-97630d59a735  3390479178 RDS      https://datasets.c… ##  5 975e13b6-bec1-4eed-b46a-9be1f1357373  4584229094 H5AD     https://datasets.c… ##  6 975e13b6-bec1-4eed-b46a-9be1f1357373  4527013199 RDS      https://datasets.c… ##  7 55003f67-c494-46f1-83fb-902745646379 19350133095 H5AD     https://datasets.c… ##  8 24ec2dc5-3573-4d66-a9e1-25b7dcf43e27   151629100 H5AD     https://datasets.c… ##  9 24ec2dc5-3573-4d66-a9e1-25b7dcf43e27   132974054 RDS      https://datasets.c… ## 10 0ba636a1-4754-4786-a8be-7ab3cf760fd6  8493125588 H5AD     https://datasets.c… ## # ℹ 2,683 more rows"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"using-dplyr-to-navigate-data","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Using dplyr to navigate data","title":"Discovery and retrieval","text":"collection may several datasets, datasets may several files. instance, collection datasets can find collection joining collections() table. can take similar strategy identify datasets belonging collection","code":"collection_with_most_datasets <-     datasets(db) |>     count(collection_id, sort = TRUE) |>     slice(1) left_join(     collection_with_most_datasets |> select(collection_id),     collections(db),     by = \"collection_id\" ) |> glimpse() ## Rows: 1 ## Columns: 18 ## $ collection_id         <chr> \"283d65eb-dd53-496d-adb7-7570c7caa443\" ## $ collection_version_id <chr> \"c4fb2c3d-960f-4845-9033-f0e758d3f059\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/28… ## $ consortia             <list> <\"BRAIN Initiative\", \"CZI Single-Cell Biology\"> ## $ contact_email         <chr> \"kimberly.siletti@ki.se\" ## $ contact_name          <chr> \"Kimberly Siletti\" ## $ curator_name          <chr> \"James Chaffer\" ## $ description           <chr> \"First draft atlas of human brain transcriptomic… ## $ doi                   <chr> \"10.1126/science.add7046\" ## $ links                 <list> [[\"\", \"RAW_DATA\", \"http://data.nemoarchive.org/b… ## $ name                  <chr> \"Human Brain Cell Atlas v1.0\" ## $ publisher_metadata    <list> [[[\"Siletti\", \"Kimberly\"], [\"Hodge\", \"Rebecca\"]… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2024-06-09 ## $ published_at          <date> 2022-12-09 ## $ revised_at            <date> 2024-06-12 left_join(     collection_with_most_datasets |> select(collection_id),     datasets(db),     by = \"collection_id\" ) ## # A tibble: 138 × 33 ##    collection_id   dataset_id dataset_version_id donor_id assay  batch_condition ##    <chr>           <chr>      <chr>              <list>   <list> <list>          ##  1 283d65eb-dd53-… ff7d15fa-… 61ee7a9e-216b-411… <chr>    <list> <chr [1]>       ##  2 283d65eb-dd53-… fe1a73ab-… 6cc6a9b9-d53a-4b2… <chr>    <list> <chr [1]>       ##  3 283d65eb-dd53-… fbf173f9-… cf701447-cfdd-40f… <chr>    <list> <chr [1]>       ##  4 283d65eb-dd53-… fa554686-… 83b8522d-f362-4ac… <chr>    <list> <chr [1]>       ##  5 283d65eb-dd53-… f9034091-… 8faf8f5a-284a-4b2… <chr>    <list> <chr [1]>       ##  6 283d65eb-dd53-… f8dda921-… 821fa877-c2b1-488… <chr>    <list> <chr [1]>       ##  7 283d65eb-dd53-… f7d003d4-… f86dbeff-36bf-403… <chr>    <list> <chr [1]>       ##  8 283d65eb-dd53-… f6d9f2ad-… 7d5e92ed-87fa-4e8… <chr>    <list> <chr [1]>       ##  9 283d65eb-dd53-… f5a04dff-… 0eb52059-c5a4-4b6… <chr>    <list> <chr [1]>       ## 10 283d65eb-dd53-… f502c312-… 443f8b59-a15d-4d2… <chr>    <list> <chr [1]>       ## # ℹ 128 more rows ## # ℹ 27 more variables: cell_count <int>, cell_type <list>, citation <chr>, ## #   default_embedding <chr>, development_stage <list>, disease <list>, ## #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, ## #   feature_count <int>, feature_reference <list>, is_primary_data <list>, ## #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, ## #   raw_data_location <chr>, schema_version <chr>, …"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"facets-provides-information-on-levels-present-in-specific-columns","dir":"Articles","previous_headings":"Collections, datasets and files","what":"facets() provides information on ‘levels’ present in specific columns","title":"Discovery and retrieval","text":"Notice columns ‘lists’ rather atomic vectors like ‘character’ ‘integer’. indicates least datasets one type assay, cell_type, etc. facets() function provides convenient way discovering possible levels column, e.g., assay, organism, self_reported_ethnicity, sex, number datasets label.","code":"datasets(db) |>     select(where(is.list)) ## # A tibble: 1,473 × 16 ##    donor_id    assay      batch_condition cell_type   development_stage disease ##    <list>      <list>     <list>          <list>      <list>            <list>  ##  1 <chr [4]>   <list [1]> <lgl [1]>       <list [1]>  <list [1]>        <list>  ##  2 <chr [55]>  <list [1]> <chr [1]>       <list [8]>  <list [33]>       <list>  ##  3 <chr [55]>  <list [1]> <chr [1]>       <list [5]>  <list [33]>       <list>  ##  4 <chr [286]> <list [3]> <lgl [1]>       <list [26]> <list [43]>       <list>  ##  5 <chr [55]>  <list [1]> <chr [1]>       <list [15]> <list [33]>       <list>  ##  6 <chr [55]>  <list [1]> <chr [1]>       <list [11]> <list [33]>       <list>  ##  7 <chr [13]>  <list [1]> <lgl [1]>       <list [16]> <list [1]>        <list>  ##  8 <chr [79]>  <list [2]> <chr [1]>       <list [1]>  <list [21]>       <list>  ##  9 <chr [89]>  <list [2]> <chr [1]>       <list [1]>  <list [24]>       <list>  ## 10 <chr [89]>  <list [2]> <chr [1]>       <list [1]>  <list [24]>       <list>  ## # ℹ 1,463 more rows ## # ℹ 10 more variables: embeddings <list>, feature_biotype <list>, ## #   feature_reference <list>, is_primary_data <list>, organism <list>, ## #   self_reported_ethnicity <list>, sex <list>, spatial <list>, ## #   suspension_type <list>, tissue <list> facets(db, \"assay\") ## # A tibble: 40 × 4 ##    facet label                          ontology_term_id     n ##    <chr> <chr>                          <chr>            <int> ##  1 assay 10x 3' v3                      EFO:0009922        673 ##  2 assay 10x 3' v2                      EFO:0009899        299 ##  3 assay Slide-seqV2                    EFO:0030062        223 ##  4 assay Visium Spatial Gene Expression EFO:0010961        220 ##  5 assay 10x 5' v1                      EFO:0011025        100 ##  6 assay Smart-seq2                     EFO:0008931         69 ##  7 assay 10x multiome                   EFO:0030059         67 ##  8 assay sci-RNA-seq                    EFO:0010550         33 ##  9 assay 10x 5' v2                      EFO:0009900         32 ## 10 assay 10x 5' transcription profiling EFO:0030004         23 ## # ℹ 30 more rows facets(db, \"self_reported_ethnicity\") ## # A tibble: 34 × 4 ##    facet                   label                          ontology_term_id     n ##    <chr>                   <chr>                          <chr>            <int> ##  1 self_reported_ethnicity European                       HANCESTRO:0005     583 ##  2 self_reported_ethnicity unknown                        unknown            562 ##  3 self_reported_ethnicity na                             na                 401 ##  4 self_reported_ethnicity Asian                          HANCESTRO:0008     149 ##  5 self_reported_ethnicity African American               HANCESTRO:0568      66 ##  6 self_reported_ethnicity Hispanic or Latin American     HANCESTRO:0014      66 ##  7 self_reported_ethnicity Native American,Hispanic or L… HANCESTRO:0013,…    50 ##  8 self_reported_ethnicity African American or Afro-Cari… HANCESTRO:0016      32 ##  9 self_reported_ethnicity Greater Middle Eastern  (Midd… HANCESTRO:0015      23 ## 10 self_reported_ethnicity African                        HANCESTRO:0010      19 ## # ℹ 24 more rows facets(db, \"sex\") ## # A tibble: 3 × 4 ##   facet label   ontology_term_id     n ##   <chr> <chr>   <chr>            <int> ## 1 sex   male    PATO:0000384      1123 ## 2 sex   female  PATO:0000383       848 ## 3 sex   unknown unknown            229"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"filtering-faceted-columns","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Filtering faceted columns","title":"Discovery and retrieval","text":"Suppose interested finding datasets 10x 3’ v3 assay (ontology_term_id EFO:0009922) containing individuals African American ethnicity, female sex. Use facets_filter() utility function filter data sets needed Use nrow(african_american_female) find number datasets satisfying criteria. looks like cells sequenced (dataset may contain cells several ethnicities, well males individuals unknown gender, know actual number cells available without downloading files). Use left_join identify corresponding collections:","code":"african_american_female <-     datasets(db) |>     filter(         facets_filter(assay, \"ontology_term_id\", \"EFO:0009922\"),         facets_filter(self_reported_ethnicity, \"label\", \"African American\"),         facets_filter(sex, \"label\", \"female\")     ) african_american_female |>     summarise(total_cell_count = sum(cell_count)) ## # A tibble: 1 × 1 ##   total_cell_count ##              <int> ## 1          5058190 ## collections left_join(     african_american_female |> select(collection_id) |> distinct(),     collections(db),     by = \"collection_id\" ) ## # A tibble: 16 × 18 ##    collection_id    collection_version_id collection_url consortia contact_email ##    <chr>            <chr>                 <chr>          <list>    <chr>         ##  1 72d37bc9-76cc-4… 5dc098de-6cd2-4ece-9… https://cellx… <chr [1]> m.sepp@zmbh.… ##  2 62e8f058-9c37-4… 0584f8f1-8ae2-4994-b… https://cellx… <chr [1]> chanj3@mskcc… ##  3 b9fc3d70-5a72-4… 1e29c67b-fd93-4ac2-8… https://cellx… <chr [1]> bruce.aronow… ##  4 b953c942-f5d8-4… 7127c92b-9ab2-45fe-9… https://cellx… <lgl [1]> icobos@stanf… ##  5 71f4bccf-53d4-4… 9b96b3b8-0905-470a-9… https://cellx… <chr [1]> kevinmbyrd@g… ##  6 6b701826-37bb-4… 6d374eb7-9c2c-4a69-8… https://cellx… <chr [1]> astreets@ber… ##  7 f17b9205-f61f-4… 84167598-bb57-4165-8… https://cellx… <chr [1]> genevieve.ko… ##  8 3c4f0970-7614-4… e8667df5-84ca-443d-b… https://cellx… <lgl [1]> alexmascensi… ##  9 bcb61471-2a44-4… 51121545-a925-4d1e-a… https://cellx… <chr [3]> info@kpmp.org ## 10 c9706a92-0e5f-4… bc0539f6-2e43-4dee-8… https://cellx… <chr [1]> hnakshat@iup… ## 11 625f6bf4-2f33-4… 418239cf-e0c0-42dc-b… https://cellx… <chr [1]> a5wang@healt… ## 12 e1fa9900-3fc9-4… 04b9f7c0-8963-4a20-8… https://cellx… <lgl [1]> j.ma@yale.edu ## 13 a98b828a-622a-4… 0ea9212d-9359-4d57-a… https://cellx… <chr [1]> markusbi@med… ## 14 4195ab4c-20bd-4… 6ede7b1a-87a8-4b7e-b… https://cellx… <chr [1]> nnavin@mdand… ## 15 cec4ef8e-1e70-4… 8171af2d-710f-462a-b… https://cellx… <lgl [1]> Ryan.Logan@u… ## 16 0f528c8a-a25c-4… 9fbe55ac-be5c-4487-a… https://cellx… <chr [3]> info@kpmp.org ## # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, ## #   description <chr>, doi <chr>, links <list>, name <chr>, ## #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, ## #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date>"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"publication-and-other-external-data","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Publication and other external data","title":"Discovery and retrieval","text":"Many collections include publication information external data. information available return value collections(), helper function publisher_metadata(), authors(), links() may facilitate access. Suppose one interested publication “single-cell atlas healthy breast tissues reveals clinically relevant clusters breast epithelial cells”. Discover collections Use collection_id extract publisher metadata (including DOI available) author information Collections may links additional external data, case DOI two links RAW_DATA. Conversely, knowledge DOI, etc., can used discover details corresponding collection.","code":"title_of_interest <- paste(     \"A single-cell atlas of the healthy breast tissues reveals clinically\",     \"relevant clusters of breast epithelial cells\" ) collection_of_interest <-     collections(db) |>     dplyr::filter(startsWith(name, title_of_interest)) collection_of_interest |>     glimpse() ## Rows: 1 ## Columns: 18 ## $ collection_id         <chr> \"c9706a92-0e5f-46c1-96d8-20e42467f287\" ## $ collection_version_id <chr> \"bc0539f6-2e43-4dee-83a4-39b8c0bb38fe\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/c9… ## $ consortia             <list> \"CZI Single-Cell Biology\" ## $ contact_email         <chr> \"hnakshat@iupui.edu\" ## $ contact_name          <chr> \"Harikrishna Nakshatri\" ## $ curator_name          <chr> \"Jennifer Yu-Sheng Chien\" ## $ description           <chr> \"Single-cell RNA sequencing (scRNA-seq) is an ev… ## $ doi                   <chr> \"10.1016/j.xcrm.2021.100219\" ## $ links                 <list> [[\"\", \"RAW_DATA\", \"https://explore.data.humancel… ## $ name                  <chr> \"A single-cell atlas of the healthy breast tiss… ## $ publisher_metadata    <list> [[[\"Bhat-Nakshatri\", \"Poornima\"], [\"Gao\", \"Hongy… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2024-06-09 ## $ published_at          <date> 2021-03-25 ## $ revised_at            <date> 2024-06-12 collection_id_of_interest <- pull(collection_of_interest, \"collection_id\") publisher_metadata(db) |>     filter(collection_id == collection_id_of_interest) |>     glimpse() ## Rows: 1 ## Columns: 9 ## $ collection_id   <chr> \"c9706a92-0e5f-46c1-96d8-20e42467f287\" ## $ name            <chr> \"A single-cell atlas of the healthy breast tissues rev… ## $ is_preprint     <lgl> FALSE ## $ journal         <chr> \"Cell Reports Medicine\" ## $ published_at    <date> 2021-03-01 ## $ published_year  <int> 2021 ## $ published_month <int> 3 ## $ published_day   <int> 1 ## $ doi             <chr> NA authors(db) |>     filter(collection_id == collection_id_of_interest) ## # A tibble: 12 × 4 ##    collection_id                        family         given       consortium ##    <chr>                                <chr>          <chr>       <chr>      ##  1 c9706a92-0e5f-46c1-96d8-20e42467f287 Bhat-Nakshatri Poornima    NA         ##  2 c9706a92-0e5f-46c1-96d8-20e42467f287 Gao            Hongyu      NA         ##  3 c9706a92-0e5f-46c1-96d8-20e42467f287 Sheng          Liu         NA         ##  4 c9706a92-0e5f-46c1-96d8-20e42467f287 McGuire        Patrick C.  NA         ##  5 c9706a92-0e5f-46c1-96d8-20e42467f287 Xuei           Xiaoling    NA         ##  6 c9706a92-0e5f-46c1-96d8-20e42467f287 Wan            Jun         NA         ##  7 c9706a92-0e5f-46c1-96d8-20e42467f287 Liu            Yunlong     NA         ##  8 c9706a92-0e5f-46c1-96d8-20e42467f287 Althouse       Sandra K.   NA         ##  9 c9706a92-0e5f-46c1-96d8-20e42467f287 Colter         Austyn      NA         ## 10 c9706a92-0e5f-46c1-96d8-20e42467f287 Sandusky       George      NA         ## 11 c9706a92-0e5f-46c1-96d8-20e42467f287 Storniolo      Anna Maria  NA         ## 12 c9706a92-0e5f-46c1-96d8-20e42467f287 Nakshatri      Harikrishna NA external_links <- links(db) external_links ## # A tibble: 845 × 4 ##    collection_id                        link_name             link_type link_url ##    <chr>                                <chr>                 <chr>     <chr>    ##  1 4828d33d-fb26-42e7-bf36-18293b0eec85 NA                    LAB_WEBS… https:/… ##  2 4828d33d-fb26-42e7-bf36-18293b0eec85 GSE173173             RAW_DATA  https:/… ##  3 4828d33d-fb26-42e7-bf36-18293b0eec85 NA                    DATA_SOU… https:/… ##  4 48259aa8-f168-4bf5-b797-af8e88da6637 trained CellTypist l… OTHER     https:/… ##  5 48259aa8-f168-4bf5-b797-af8e88da6637 NA                    OTHER     https:/… ##  6 48259aa8-f168-4bf5-b797-af8e88da6637 E-MTAB-13664          RAW_DATA  https:/… ##  7 6e067060-f7e4-466c-86f3-ec3dd33c0381 NA                    RAW_DATA  https:/… ##  8 6e067060-f7e4-466c-86f3-ec3dd33c0381 Images                OTHER     https:/… ##  9 6e067060-f7e4-466c-86f3-ec3dd33c0381 LungMAP ShinyCell     OTHER     http://… ## 10 6e067060-f7e4-466c-86f3-ec3dd33c0381 LungMAP Portal        OTHER     http://… ## # ℹ 835 more rows external_links |>     count(link_type) ## # A tibble: 5 × 2 ##   link_type       n ##   <chr>       <int> ## 1 DATA_SOURCE    55 ## 2 LAB_WEBSITE    44 ## 3 OTHER         371 ## 4 PROTOCOL       48 ## 5 RAW_DATA      327 external_links |>     filter(collection_id == collection_id_of_interest) ## # A tibble: 2 × 4 ##   collection_id                        link_name link_type link_url              ##   <chr>                                <chr>     <chr>     <chr>                 ## 1 c9706a92-0e5f-46c1-96d8-20e42467f287 NA        RAW_DATA  https://explore.data… ## 2 c9706a92-0e5f-46c1-96d8-20e42467f287 NA        RAW_DATA  https://www.ncbi.nlm… doi_of_interest <- \"https://doi.org/10.1016/j.stem.2018.12.011\" links(db) |>     filter(link_url == doi_of_interest) |>     left_join(collections(db), by = \"collection_id\") |>     glimpse() ## Rows: 1 ## Columns: 21 ## $ collection_id         <chr> \"b1a879f6-5638-48d3-8f64-f6592c1b1561\" ## $ link_name             <chr> \"PSC-ATO protocol\" ## $ link_type             <chr> \"PROTOCOL\" ## $ link_url              <chr> \"https://doi.org/10.1016/j.stem.2018.12.011\" ## $ collection_version_id <chr> \"47c7b727-cdb8-4d5f-8dbf-107197c7acb5\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/b1… ## $ consortia             <list> <\"CZI Single-Cell Biology\", \"Wellcome HCA Strate… ## $ contact_email         <chr> \"st9@sanger.ac.uk\" ## $ contact_name          <chr> \"Sarah Teichmann\" ## $ curator_name          <chr> \"Batuhan Cakir\" ## $ description           <chr> \"Single-cell genomics studies have decoded the i… ## $ doi                   <chr> \"10.1126/science.abo0510\" ## $ links                 <list> [[\"scVI Models\", \"DATA_SOURCE\", \"https://develop… ## $ name                  <chr> \"Mapping the developing human immune system acro… ## $ publisher_metadata    <list> [[[\"Suo\", \"Chenqu\"], [\"Dann\", \"Emma\"], [\"Goh\", \"… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2024-06-09 ## $ published_at          <date> 2022-10-04 ## $ revised_at            <date> 2024-06-12"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"visualizing-data-in-cellxgene","dir":"Articles","previous_headings":"","what":"Visualizing data in cellxgene","title":"Discovery and retrieval","text":"Visualization straight-forward dataset_id available. example, visualize first dataset african_american_female, use Visualization interactive process, datasets_visualize() open 5 browser tabs per call.","code":"african_american_female |>     ## use criteria to identify a single dataset (here just the     ## 'first' dataset), then visualize     slice(1) |>     datasets_visualize()"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"file-download-and-use","dir":"Articles","previous_headings":"","what":"File download and use","title":"Discovery and retrieval","text":"Datasets usually contain H5AD (files produced python AnnData module), Rds (serialized files produced R Seurat package). Rds files may unreadable version Seurat used create file different version used read file. therefore focus H5AD files. illustration, find files associated studies African American females download one selected files. choose single dataset H5AD file download downloaded local cache (use internal function cellxgenedp:::.cellxgenedb_cache_path() location cache), process time-consuming first time. H5AD files can converted R / Bioconductor objects using zellkonverter package. SingleCellExperiment object matrix-like object rows corresponding genes columns cells. Thus can easily explore cells present data.","code":"selected_files <-     left_join(         african_american_female |> select(dataset_id),         files(db),         by = \"dataset_id\"     ) local_file <-     selected_files |>     filter(         dataset_id == \"de985818-285f-4f59-9dbd-d74968fddba3\",         filetype == \"H5AD\"     ) |>     files_download(dry.run = FALSE) basename(local_file) ## [1] \"5978cd46-9b54-4028-9b57-ee6d961b7acd.h5ad\" h5ad <- readH5AD(local_file, use_hdf5 = TRUE, reader = \"R\") h5ad ## class: SingleCellExperiment  ## dim: 33145 31696  ## metadata(5): citation default_embedding schema_reference schema_version ##   title ## assays(1): X ## rownames(33145): ENSG00000243485 ENSG00000237613 ... ENSG00000277475 ##   ENSG00000268674 ## rowData names(5): feature_is_filtered feature_name feature_reference ##   feature_biotype feature_length ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(36): donor_id self_reported_ethnicity_ontology_term_id ##   ... development_stage observation_joinid ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0): h5ad |>     colData(h5ad) |>     as_tibble() |>     count(sex, donor_id) ## # A tibble: 7 × 3 ##   sex    donor_id                     n ##   <fct>  <fct>                    <int> ## 1 female D1                        2303 ## 2 female D2                         864 ## 3 female D3                        2517 ## 4 female D4                        1771 ## 5 female D5                        2244 ## 6 female D11                       7454 ## 7 female pooled [D9,D7,D8,D10,D6] 14543"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"Discovery and retrieval","text":"Orchestrating Single-Cell Analysis Bioconductor online resource provides excellent introduction analysis visualization single-cell data R / Bioconductor. Extensive opportunities working AnnData objects R using native python interface briefly described , e.g., ?AnnData2SCE help page zellkonverter. hca package provides programmatic access Human Cell Atlas data portal, allowing retrieval primary well derived single-cell data files.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"api-changes","dir":"Articles","previous_headings":"","what":"API changes","title":"Discovery and retrieval","text":"Data access provided CELLxGENE changed new ‘Discover’ API. main functionality cellxgenedp package changed, specific columns removed, replaced added, follows: collections() Removed: access_type, data_submission_policy_version Replaced: updated_at replaced revised_at Added: collection_version_id, collection_url, doi, revising_in, revision_of datasets() Removed: is_valid, processing_status, published, revision, created_at Replaced: dataset_deployments replaced explorer_url, name replaced title, updated_at replaced revised_at Added: dataset_version_id, batch_condition, x_approximate_distribution files() Removed: file_id, filename, s3_uri, user_submitted, created_at, updated_at Added: filesize, url","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Discovery and retrieval","text":"","code":"## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] cellxgenedp_1.9.0           dplyr_1.1.4                 ##  [3] SingleCellExperiment_1.26.0 SummarizedExperiment_1.34.0 ##  [5] Biobase_2.64.0              GenomicRanges_1.56.1        ##  [7] GenomeInfoDb_1.40.1         IRanges_2.38.1              ##  [9] S4Vectors_0.42.1            BiocGenerics_0.50.0         ## [11] MatrixGenerics_1.16.0       matrixStats_1.3.0           ## [13] zellkonverter_1.14.1        BiocStyle_2.32.1            ##  ## loaded via a namespace (and not attached): ##  [1] tidyselect_1.2.1        filelock_1.0.3          fastmap_1.2.0           ##  [4] promises_1.3.0          digest_0.6.36           mime_0.12               ##  [7] lifecycle_1.0.4         magrittr_2.0.3          compiler_4.4.1          ## [10] rlang_1.1.4             sass_0.4.9              tools_4.4.1             ## [13] utf8_1.2.4              yaml_2.3.10             knitr_1.48              ## [16] S4Arrays_1.4.1          htmlwidgets_1.6.4       curl_5.2.1              ## [19] reticulate_1.38.0       DelayedArray_0.30.1     abind_1.4-5             ## [22] HDF5Array_1.32.1        withr_3.0.1             desc_1.4.3              ## [25] grid_4.4.1              fansi_1.0.6             xtable_1.8-4            ## [28] Rhdf5lib_1.26.0         cli_3.6.3               rmarkdown_2.28          ## [31] crayon_1.5.3            ragg_1.3.2              generics_0.1.3          ## [34] httr_1.4.7              cachem_1.1.0            rhdf5_2.48.0            ## [37] zlibbioc_1.50.0         parallel_4.4.1          BiocManager_1.30.23     ## [40] XVector_0.44.0          basilisk_1.16.0         vctrs_0.6.5             ## [43] Matrix_1.7-0            jsonlite_1.8.8          dir.expiry_1.12.0       ## [46] bookdown_0.40           systemfonts_1.1.0       jquerylib_0.1.4         ## [49] glue_1.7.0              pkgdown_2.1.0           DT_0.33                 ## [52] later_1.3.2             UCSC.utils_1.0.0        tibble_3.2.1            ## [55] pillar_1.9.0            basilisk.utils_1.16.0   htmltools_0.5.8.1       ## [58] rhdf5filters_1.16.0     GenomeInfoDbData_1.2.12 R6_2.5.1                ## [61] textshaping_0.4.0       evaluate_0.24.0         shiny_1.9.1             ## [64] lattice_0.22-6          png_0.1-8               httpuv_1.6.15           ## [67] bslib_0.8.0             rjsoncons_1.3.1         Rcpp_1.0.13             ## [70] SparseArray_1.4.8       xfun_0.47               fs_1.6.4                ## [73] pkgconfig_2.0.3"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Case studies","text":"case study, ensure cellxgenedp (see Bioconductor package landing page, GitHub.io site) installed (additional installation options https://mtmorgan.github.io/cellxgenedp/). Load package.","code":"if (!\"BiocManager\" %in% rownames(installed.packages()))     install.packages(\"BiocManager\", repos = \"https://CRAN.R-project.org\") BiocManager::install(\"cellxgenedp\") library(cellxgenedp)"},{"path":[]},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"challenge-and-solution","dir":"Articles","previous_headings":"Case study: authors & datasets","what":"Challenge and solution","title":"Case studies","text":"case study arose question CZI Science Community Slack. user asked Hi! possible search CELLxGENE identify datasets specific author set authors? Unfortunately, possible CELLxGENE web site – authors associated collections, collections can sorted filtered title (publication / tissue / disease / organism). cellxgenedp solution uses authors() discover authors collections, joins information datasets(). author_datasets provides convenient point make basic queries, e.g., finding authors contributing datasets. Perhaps one interested prolific authors based ‘collections’, rather ‘datasets’. five prolific authors collection datasets associated authors Alternatively, one might interested specific authors. easily accomplished simple filter author_datasets, e.g., carefully constructing data.frame family given names, performing join author_datasets","code":"author_datasets <- left_join(     authors(),     datasets(),     by = \"collection_id\",     relationship = \"many-to-many\" ) author_datasets #> # A tibble: 50,135 × 36 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 4828d33d-fb26… Escou… Caro… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #>  2 4828d33d-fb26… Dorman Leah… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #>  3 4828d33d-fb26… Nguyen Phi … NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #>  4 4828d33d-fb26… Lagar… Chri… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #>  5 4828d33d-fb26… Nakajo Haru… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #>  6 4828d33d-fb26… Ander… Sara… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #>  7 4828d33d-fb26… Barron Jeri… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #>  8 4828d33d-fb26… Wade   Sara… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #>  9 4828d33d-fb26… Cuevas Beat… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #> 10 4828d33d-fb26… Vainc… Ilia… NA         5dec4249-… dea35fd3-c576-4ca… <chr>    #> # ℹ 50,125 more rows #> # ℹ 29 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, default_embedding <chr>, #> #   development_stage <list>, disease <list>, embeddings <list>, #> #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, #> #   feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, … author_datasets |>     count(family, given, sort = TRUE) #> # A tibble: 4,594 × 3 #>    family      given        n #>    <chr>       <chr>    <int> #>  1 Teichmann   Sarah A.   264 #>  2 Casper      Tamara     256 #>  3 Dee         Nick       256 #>  4 Hirschstein Daniel     241 #>  5 Macosko     Evan Z.    230 #>  6 Travaglini  Kyle J.    230 #>  7 Chen        Fei        226 #>  8 Ding        Song-Lin   226 #>  9 Murray      Evan       226 #> 10 Lein        Ed S.      222 #> # ℹ 4,584 more rows prolific_authors <-     authors() |>     count(family, given, sort = TRUE) |>     slice(1:5) prolific_authors #> # A tibble: 5 × 3 #>   family    given          n #>   <chr>     <chr>      <int> #> 1 Teichmann Sarah A.      30 #> 2 Meyer     Kerstin B.    15 #> 3 Polanski  Krzysztof     15 #> 4 Haniffa   Muzlifah      14 #> 5 Regev     Aviv          14 right_join(     author_datasets,     prolific_authors,     by = c(\"family\", \"given\") ) #> # A tibble: 644 × 37 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 34f12de7-c5e5… Teich… Sara… NA         f0973891-… 78aa364a-0f20-411… <chr>    #>  2 34f12de7-c5e5… Teich… Sara… NA         ef9a2058-… 9ec16c9d-b4b3-445… <chr>    #>  3 34f12de7-c5e5… Teich… Sara… NA         e7c5ba7e-… 2d3fc1d5-933e-47d… <chr>    #>  4 34f12de7-c5e5… Teich… Sara… NA         dee75ca4-… 795232bf-08ca-48e… <chr>    #>  5 34f12de7-c5e5… Teich… Sara… NA         dce10ba0-… 2f2a2929-0c53-4f3… <chr>    #>  6 34f12de7-c5e5… Teich… Sara… NA         da22c90e-… f9dc9230-cd78-4cc… <chr>    #>  7 34f12de7-c5e5… Teich… Sara… NA         d7d70622-… 18cc77ec-f88e-424… <chr>    #>  8 34f12de7-c5e5… Teich… Sara… NA         d465e08b-… 3dc18f67-12e1-4a6… <chr>    #>  9 34f12de7-c5e5… Teich… Sara… NA         c68e6ac8-… 97872cba-2dea-4d4… <chr>    #> 10 34f12de7-c5e5… Teich… Sara… NA         b336b422-… 5def0614-e8e3-4bb… <chr>    #> # ℹ 634 more rows #> # ℹ 30 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, default_embedding <chr>, #> #   development_stage <list>, disease <list>, embeddings <list>, #> #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, #> #   feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, … author_datasets |>     filter(         family %in% c(\"Teichmann\", \"Regev\", \"Haniffa\")     ) #> # A tibble: 405 × 36 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 34f12de7-c5e5… Teich… Sara… NA         f0973891-… 78aa364a-0f20-411… <chr>    #>  2 34f12de7-c5e5… Teich… Sara… NA         ef9a2058-… 9ec16c9d-b4b3-445… <chr>    #>  3 34f12de7-c5e5… Teich… Sara… NA         e7c5ba7e-… 2d3fc1d5-933e-47d… <chr>    #>  4 34f12de7-c5e5… Teich… Sara… NA         dee75ca4-… 795232bf-08ca-48e… <chr>    #>  5 34f12de7-c5e5… Teich… Sara… NA         dce10ba0-… 2f2a2929-0c53-4f3… <chr>    #>  6 34f12de7-c5e5… Teich… Sara… NA         da22c90e-… f9dc9230-cd78-4cc… <chr>    #>  7 34f12de7-c5e5… Teich… Sara… NA         d7d70622-… 18cc77ec-f88e-424… <chr>    #>  8 34f12de7-c5e5… Teich… Sara… NA         d465e08b-… 3dc18f67-12e1-4a6… <chr>    #>  9 34f12de7-c5e5… Teich… Sara… NA         c68e6ac8-… 97872cba-2dea-4d4… <chr>    #> 10 34f12de7-c5e5… Teich… Sara… NA         b336b422-… 5def0614-e8e3-4bb… <chr>    #> # ℹ 395 more rows #> # ℹ 29 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, default_embedding <chr>, #> #   development_stage <list>, disease <list>, embeddings <list>, #> #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, #> #   feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, … authors_of_interest <-     tibble(         family = c(\"Teichmann\", \"Regev\", \"Haniffa\"),         given = c(\"Sarah A.\", \"Aviv\", \"Muzlifah\")     ) right_join(     author_datasets,     authors_of_interest,     by = c(\"family\", \"given\") ) #> # A tibble: 395 × 36 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 34f12de7-c5e5… Teich… Sara… NA         f0973891-… 78aa364a-0f20-411… <chr>    #>  2 34f12de7-c5e5… Teich… Sara… NA         ef9a2058-… 9ec16c9d-b4b3-445… <chr>    #>  3 34f12de7-c5e5… Teich… Sara… NA         e7c5ba7e-… 2d3fc1d5-933e-47d… <chr>    #>  4 34f12de7-c5e5… Teich… Sara… NA         dee75ca4-… 795232bf-08ca-48e… <chr>    #>  5 34f12de7-c5e5… Teich… Sara… NA         dce10ba0-… 2f2a2929-0c53-4f3… <chr>    #>  6 34f12de7-c5e5… Teich… Sara… NA         da22c90e-… f9dc9230-cd78-4cc… <chr>    #>  7 34f12de7-c5e5… Teich… Sara… NA         d7d70622-… 18cc77ec-f88e-424… <chr>    #>  8 34f12de7-c5e5… Teich… Sara… NA         d465e08b-… 3dc18f67-12e1-4a6… <chr>    #>  9 34f12de7-c5e5… Teich… Sara… NA         c68e6ac8-… 97872cba-2dea-4d4… <chr>    #> 10 34f12de7-c5e5… Teich… Sara… NA         b336b422-… 5def0614-e8e3-4bb… <chr>    #> # ℹ 385 more rows #> # ℹ 29 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, default_embedding <chr>, #> #   development_stage <list>, disease <list>, embeddings <list>, #> #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, #> #   feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, …"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"areas-of-interest","dir":"Articles","previous_headings":"Case study: authors & datasets","what":"Areas of interest","title":"Case studies","text":"several interesting questions suggest , several areas additional work required. might interesting identify authors working similar disease, areas interest. disease column author_datasets table list. single dataset may involve one disease. Furthermore, entry list contains two elements, label ontology_term_id disease. two approaches working data. One approach working data uses facilities cellxgenedp outlined accompanying article. Discover possible diseases. Focus COVID-19, use facets_filter() select relevant author-dataset combinations. Authors contributing datasets second approach follow practices R Data Science, disease column can ‘unnested’ twice, first time expand author_datasets table disease, second time separate two columns disease. Author-dataset combinations associated COVID-19, contributors datasets, computations earlier iteration using functionality cellxgenedp. resource might interest [OSLr][] package article illustrating ontologies used CELLxGENE can manipulated , e.g., identify studies terms derive common term (e.g., disease terms related ‘carcinoma’).","code":"author_datasets |>     select(family, given, dataset_id, disease) #> # A tibble: 50,135 × 4 #>    family          given       dataset_id                           disease    #>    <chr>           <chr>       <chr>                                <list>     #>  1 Escoubas        Caroline C. 5dec4249-8459-4df0-8998-37193135754c <list [1]> #>  2 Dorman          Leah C.     5dec4249-8459-4df0-8998-37193135754c <list [1]> #>  3 Nguyen          Phi T.      5dec4249-8459-4df0-8998-37193135754c <list [1]> #>  4 Lagares-Linares Christian   5dec4249-8459-4df0-8998-37193135754c <list [1]> #>  5 Nakajo          Haruna      5dec4249-8459-4df0-8998-37193135754c <list [1]> #>  6 Anderson        Sarah R.    5dec4249-8459-4df0-8998-37193135754c <list [1]> #>  7 Barron          Jerika J.   5dec4249-8459-4df0-8998-37193135754c <list [1]> #>  8 Wade            Sarah D.    5dec4249-8459-4df0-8998-37193135754c <list [1]> #>  9 Cuevas          Beatriz     5dec4249-8459-4df0-8998-37193135754c <list [1]> #> 10 Vainchtein      Ilia D.     5dec4249-8459-4df0-8998-37193135754c <list [1]> #> # ℹ 50,125 more rows facets(db(), \"disease\") #> # A tibble: 130 × 4 #>    facet   label                                        ontology_term_id     n #>    <chr>   <chr>                                        <chr>            <int> #>  1 disease normal                                       PATO:0000461      1256 #>  2 disease COVID-19                                     MONDO:0100096       66 #>  3 disease dementia                                     MONDO:0001627       50 #>  4 disease myocardial infarction                        MONDO:0005068       28 #>  5 disease diabetic kidney disease                      MONDO:0005016       26 #>  6 disease autosomal dominant polycystic kidney disease MONDO:0004691       24 #>  7 disease nonpapillary renal cell carcinoma            MONDO:0007763       19 #>  8 disease colorectal cancer                            MONDO:0005575       17 #>  9 disease Alzheimer disease                            MONDO:0004975       15 #> 10 disease small cell lung carcinoma                    MONDO:0008433       12 #> # ℹ 120 more rows author_datasets |>     filter(facets_filter(disease, \"label\", \"COVID-19\")) #> # A tibble: 1,912 × 36 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 7d7cabfd-1d1f… van d… Moni… NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #>  2 7d7cabfd-1d1f… Vazqu… Sara… NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #>  3 7d7cabfd-1d1f… Harto… Geor… NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #>  4 7d7cabfd-1d1f… Basta… Paul  NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #>  5 7d7cabfd-1d1f… Grant  Tian… NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #>  6 7d7cabfd-1d1f… Bueno  Raym… NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #>  7 7d7cabfd-1d1f… Lee    Davi… NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #>  8 7d7cabfd-1d1f… Green… John… NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #>  9 7d7cabfd-1d1f… Sun    Yang  NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #> 10 7d7cabfd-1d1f… Perez  Rich… NA         01ad3cd7-… 02a1eee1-e290-47d… <chr>    #> # ℹ 1,902 more rows #> # ℹ 29 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, default_embedding <chr>, #> #   development_stage <list>, disease <list>, embeddings <list>, #> #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, #> #   feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, … author_datasets |>     filter(facets_filter(disease, \"label\", \"COVID-19\")) |>     count(family, given, sort = TRUE) #> # A tibble: 836 × 3 #>    family       given           n #>    <chr>        <chr>       <int> #>  1 Farber       Donna L.       29 #>  2 Guo          Xinzheng V.    28 #>  3 Saqi         Anjali         28 #>  4 Baldwin      Matthew R.     27 #>  5 Chait        Michael        27 #>  6 Connors      Thomas J.      27 #>  7 Davis-Porada Julia          27 #>  8 Dogra        Pranay         27 #>  9 Gray         Joshua I.      27 #> 10 Idzikowski   Emma           27 #> # ℹ 826 more rows author_dataset_diseases <-     author_datasets |>     select(family, given, dataset_id, disease) |>     tidyr::unnest_longer(disease) |>     tidyr::unnest_wider(disease) author_dataset_diseases #> # A tibble: 64,820 × 5 #>    family          given       dataset_id                 label ontology_term_id #>    <chr>           <chr>       <chr>                      <chr> <chr>            #>  1 Escoubas        Caroline C. 5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #>  2 Dorman          Leah C.     5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #>  3 Nguyen          Phi T.      5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #>  4 Lagares-Linares Christian   5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #>  5 Nakajo          Haruna      5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #>  6 Anderson        Sarah R.    5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #>  7 Barron          Jerika J.   5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #>  8 Wade            Sarah D.    5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #>  9 Cuevas          Beatriz     5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #> 10 Vainchtein      Ilia D.     5dec4249-8459-4df0-8998-3… norm… PATO:0000461     #> # ℹ 64,810 more rows author_dataset_diseases |>     filter(label == \"COVID-19\")  author_dataset_diseases |>     filter(label == \"COVID-19\") |>     count(family, given, sort = TRUE)"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"collaboration","dir":"Articles","previous_headings":"Case study: authors & datasets","what":"Collaboration","title":"Case studies","text":"TODO. might interesting know authors collaborated one another. can computed author_datasets table, following approaches developed grantpubcite package identify collaborations projects NIH-funded ITCR program. See graph visualization ITCR collaboration section inspiration.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"duplicate-collection-author-combinations","dir":"Articles","previous_headings":"Case study: authors & datasets","what":"Duplicate collection-author combinations","title":"Case studies","text":"authors 6052 collection-author combinations. expect distinct (row identifying unique collection-author combination). true Duplicated data Discover details first duplicated collection, e5f58829-1a66-40b5-a624-9046778e74f5 author information comes publisher_metadata column ‘list--lists’, relevant information elements first list relevant information authors field, 221 Inspection shows four authors family name Pisco given name Angela Oliveira: appears data provided CZI indeed includes duplicate author names. pragmatic perspective, might make sense remove duplicate entries authors -stream analysis. Tools found useful working list--lists style data rare listviewer::jsonedit() visualization, rjsoncons filtering querying data using JSONpointer, JSONpath, JMESpath expression (R-centric tool purrr package).","code":"authors <- authors() authors #> # A tibble: 6,052 × 4 #>    collection_id                        family          given       consortium #>    <chr>                                <chr>           <chr>       <chr>      #>  1 4828d33d-fb26-42e7-bf36-18293b0eec85 Escoubas        Caroline C. NA         #>  2 4828d33d-fb26-42e7-bf36-18293b0eec85 Dorman          Leah C.     NA         #>  3 4828d33d-fb26-42e7-bf36-18293b0eec85 Nguyen          Phi T.      NA         #>  4 4828d33d-fb26-42e7-bf36-18293b0eec85 Lagares-Linares Christian   NA         #>  5 4828d33d-fb26-42e7-bf36-18293b0eec85 Nakajo          Haruna      NA         #>  6 4828d33d-fb26-42e7-bf36-18293b0eec85 Anderson        Sarah R.    NA         #>  7 4828d33d-fb26-42e7-bf36-18293b0eec85 Barron          Jerika J.   NA         #>  8 4828d33d-fb26-42e7-bf36-18293b0eec85 Wade            Sarah D.    NA         #>  9 4828d33d-fb26-42e7-bf36-18293b0eec85 Cuevas          Beatriz     NA         #> 10 4828d33d-fb26-42e7-bf36-18293b0eec85 Vainchtein      Ilia D.     NA         #> # ℹ 6,042 more rows nrow(authors) == nrow(distinct(authors)) #> [1] FALSE authors |>      count(collection_id, family, given, consortium, sort = TRUE) |>     filter(n > 1) #> # A tibble: 73 × 5 #>    collection_id                        family     given        consortium     n #>    <chr>                                <chr>      <chr>        <chr>      <int> #>  1 e5f58829-1a66-40b5-a624-9046778e74f5 Pisco      Angela Oliv… NA             4 #>  2 e5f58829-1a66-40b5-a624-9046778e74f5 Crasta     Sheela       NA             3 #>  3 e5f58829-1a66-40b5-a624-9046778e74f5 Swift      Michael      NA             3 #>  4 e5f58829-1a66-40b5-a624-9046778e74f5 Travaglini Kyle J.      NA             3 #>  5 e5f58829-1a66-40b5-a624-9046778e74f5 de Morree  Antoine      NA             3 #>  6 51544e44-293b-4c2b-8c26-560678423380 Betts      Michael R.   NA             2 #>  7 51544e44-293b-4c2b-8c26-560678423380 Faryabi    Robert B.    NA             2 #>  8 51544e44-293b-4c2b-8c26-560678423380 Fasolino   Maria        NA             2 #>  9 51544e44-293b-4c2b-8c26-560678423380 Feldman    Michael      NA             2 #> 10 51544e44-293b-4c2b-8c26-560678423380 Goldman    Naomi        NA             2 #> # ℹ 63 more rows duplicate_authors <-     collections() |>     filter(collection_id == \"e5f58829-1a66-40b5-a624-9046778e74f5\") duplicate_authors #> # A tibble: 1 × 18 #>   collection_id     collection_version_id collection_url consortia contact_email #>   <chr>             <chr>                 <chr>          <list>    <chr>         #> 1 e5f58829-1a66-40… acbbf99b-9781-4dd7-8… https://cellx… <chr [2]> angela.pisco… #> # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, #> #   description <chr>, doi <chr>, links <list>, name <chr>, #> #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, #> #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date> publisher_metadata <-     duplicate_authors |>     pull(publisher_metadata) names(publisher_metadata[[1]]) #> [1] \"authors\"         \"is_preprint\"     \"journal\"         \"published_at\"    #> [5] \"published_day\"   \"published_month\" \"published_year\" length(publisher_metadata[[1]][[\"authors\"]]) #> [1] 221 deduplicated_authors <- distinct(authors)"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"what-is-an-author","dir":"Articles","previous_headings":"Case study: authors & datasets > Duplicate collection-author combinations","what":"What is an ‘author’?","title":"Case studies","text":"combination family given name may refer two () different individuals (e.g., two individuals named ‘Martin Morgan’), single individual may recorded two different names (e.g., given name sometimes ‘Martin’ sometimes ‘Martin T.’). clear resolved; recording ORCID identifiers migth help disambiguation.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"case-study-using-ontology-to-identify-datasets","dir":"Articles","previous_headings":"","what":"Case study: using ontology to identify datasets","title":"Case studies","text":"case study developed response following Slack question: CELLxGENE’s webpage using different ontologies displaying easy interogate manner (choosing amongst 3 possible coarseness cell types, tissues age) wondering simplified tree 3 subgroups cell type, tissue age categories available somewhere? indicated question, CELLxGENE provides access ontologies hand-curated three-tiered classification specific facets; tiers can retrieved publicly available code, one might want develop flexible principled approach. CELLxGENE dataset facets like ‘disease’ ‘cell type’ use terms ontologies. Ontologies arrange terms directed acyclic graphs, use ontologies can useful identify related datasets. instance, one might interesed cancer-related datasets (derived ‘carcinoma’ term corresponding ontology) general, rather , e.g., ‘B-cell non-Hodgkins lymphoma’. exploring question R, found developing OLSr package query process ontologies EMBL-EBI Ontology Lookup Service. See ‘Case Study: CELLxGENE Ontologies’ article OLSr package full details.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Case studies","text":"","code":"#> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] cellxgenedp_1.9.0 dplyr_1.1.4       BiocStyle_2.32.1  #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.9          utf8_1.2.4          generics_0.1.3      #>  [4] tidyr_1.3.1         digest_0.6.36       magrittr_2.0.3      #>  [7] evaluate_0.24.0     bookdown_0.40       fastmap_1.2.0       #> [10] jsonlite_1.8.8      promises_1.3.0      BiocManager_1.30.23 #> [13] httr_1.4.7          purrr_1.0.2         fansi_1.0.6         #> [16] textshaping_0.4.0   jquerylib_0.1.4     cli_3.6.3           #> [19] shiny_1.9.1         rlang_1.1.4         withr_3.0.1         #> [22] cachem_1.1.0        yaml_2.3.10         tools_4.4.1         #> [25] httpuv_1.6.15       DT_0.33             curl_5.2.1          #> [28] vctrs_0.6.5         rjsoncons_1.3.1     R6_2.5.1            #> [31] mime_0.12           lifecycle_1.0.4     fs_1.6.4            #> [34] htmlwidgets_1.6.4   ragg_1.3.2          pkgconfig_2.0.3     #> [37] desc_1.4.3          pkgdown_2.1.0       pillar_1.9.0        #> [40] bslib_0.8.0         later_1.3.2         glue_1.7.0          #> [43] Rcpp_1.0.13         systemfonts_1.1.0   xfun_0.47           #> [46] tibble_3.2.1        tidyselect_1.2.1    knitr_1.48          #> [49] xtable_1.8-4        htmltools_0.5.8.1   rmarkdown_2.28      #> [52] compiler_4.4.1"},{"path":"https://mtmorgan.github.io/cellxgenedp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer. Kayla Interdonato. Author.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M, Interdonato K (2024). cellxgenedp: Discover Access Single Cell Data Sets CELLxGENE Data Portal. R package version 1.9.0, https://github.com/mtmorgan/cellxgenedp, https://mtmorgan.github.io/cellxgenedp/.","code":"@Manual{,   title = {cellxgenedp: Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal},   author = {Martin Morgan and Kayla Interdonato},   year = {2024},   note = {R package version 1.9.0, https://github.com/mtmorgan/cellxgenedp},   url = {https://mtmorgan.github.io/cellxgenedp/}, }"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"introduction-to-cellxgenedp","dir":"","previous_headings":"","what":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"cellxgene data portal https://cellxgene.cziscience.com/ provides graphical user interface collections single-cell sequence data processed standard ways ‘count matrix’ summaries. cellxgenedp package provides alternative, R-based inteface, allowind data discovery, viewing, downloading.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"package available Bioconductor version 3.15 later. following code installs cellxgenedp Alternatively, install ‘development’ version GitHub also install additional packages required vignette, use","code":"if (!\"BiocManager\" %in% rownames(installed.packages()))     install.packages(\"BiocManager\", repos = \"https://CRAN.R-project.org\") BiocManager::install(\"cellxgenedp\") if (!\"remotes\" %in% rownames(installed.packages()))     install.packages(\"remotes\", repos = \"https://CRAN.R-project.org\") remotes::install_github(\"mtmorgan/cellxgenedp\") pkgs <- c(\"tidyr\", \"zellkonverter\", \"SingleCellExperiment\", \"HDF5Array\") required_pkgs <- pkgs[!pkgs %in% rownames(installed.packages())] BiocManager::install(required_pkgs)"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"Load package current R session. make extensive use dplyr packages, end vignette use SingleCellExperiment zellkonverter, load well.","code":"suppressPackageStartupMessages({     library(dplyr)     library(cellxgenedp) })"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"shiny","dir":"","previous_headings":"","what":"Shiny","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"cxg() provides ‘shiny’ interface allowing discovery collections datasets, visualization selected datasets cellxgene data portal, download datasets use R.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"next-steps","dir":"","previous_headings":"","what":"Next steps","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"View artcle Discover download datasets files cellxgene data portal.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny application for discovering, viewing, and downloading cellxgene data — cxg","title":"Shiny application for discovering, viewing, and downloading cellxgene data — cxg","text":"Shiny application discovering, viewing, downloading cellxgene data","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny application for discovering, viewing, and downloading cellxgene data — cxg","text":"","code":"cxg(as = c(\"tibble\", \"sce\"))"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny application for discovering, viewing, and downloading cellxgene data — cxg","text":"character(1) Return value quiting shiny application. \"tibble\" returns tibble describing selected datasets (including location disk downloaded file). \"sce\" returns list dataset files imported R SingleCellExperiment objects.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny application for discovering, viewing, and downloading cellxgene data — cxg","text":"cxg() returns either tibble describing datasets selected shiny application, list datasets imported R SingleCellExperiment objects.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny application for discovering, viewing, and downloading cellxgene data — cxg","text":"","code":"# \\donttest{ if (interactive())     cxg() # }"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve updated cellxgene database metadata — db","title":"Retrieve updated cellxgene database metadata — db","text":"Retrieve updated cellxgene database metadata","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve updated cellxgene database metadata — db","text":"","code":"db(overwrite = .db_online() && .db_first())"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve updated cellxgene database metadata — db","text":"overwrite logical(1) indicating whether database collections updated internet (default, internet available , interactive session, user requests update), read disk (assuming previous successful access internet).  overwrite = FALSE might useful reproducibility, testing, working environment restricted internet access.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve updated cellxgene database metadata — db","text":"db() returns object class 'cellxgene_db', summarizing available collections, datasets, files.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve updated cellxgene database metadata — db","text":"database retrieved cellxgene data portal web site. 'collections' metadata retrieved call; metadata collection cached locally re-use.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve updated cellxgene database metadata — db","text":"","code":"db() #> cellxgene_db #> number of collections(): 227 #> number of datasets(): 1473 #> number of files(): 2693"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":null,"dir":"Reference","previous_headings":"","what":"Facets available for querying cellxgene data — FACETS","title":"Facets available for querying cellxgene data — FACETS","text":"FACETS character vector common fields used subset cellxgene data. facets() used query cellxgene database current values one facets. facets_filter() provides convenient way filter facets based label ontology term.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facets available for querying cellxgene data — FACETS","text":"","code":"FACETS  facets(cellxgene_db = db(), facets = FACETS)  facets_filter(facet, key = c(\"label\", \"ontology_term_id\"), value, exact = TRUE)"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Facets available for querying cellxgene data — FACETS","text":"FACETS object class character length 8.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facets available for querying cellxgene data — FACETS","text":"cellxgene_db (optional) cellxgene_db object, returned db(). facets character() vector corersponding one facets FACETS. facet column containing faceted information, e.g., sex datasets(db). key character(1) identifying whether value label ontology_term_id. value character() value label ontology term filter . value may vector length(value) > 0 exact matchs (exact = TRUE, default), character(1) regular expression. exact logical(1) whether values match exactly (default, TRUE) regular expression (FALSE).","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facets available for querying cellxgene data — FACETS","text":"facets() returns tibble columns facet, label, ontology_term_id, n, number times facet label used database. facets_filter() returns logical vector length equal length (number rows) facet, TRUE indicating value key present dataset.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facets available for querying cellxgene data — FACETS","text":"","code":"f <- facets()  ## levels of each facet f |>     dplyr::count(facet) #> # A tibble: 8 × 2 #>   facet                       n #>   <chr>                   <int> #> 1 assay                      40 #> 2 cell_type                 904 #> 3 development_stage         248 #> 4 disease                   130 #> 5 organism                    7 #> 6 self_reported_ethnicity    34 #> 7 sex                         3 #> 8 tissue                    427  ## same as facets(, facets = \"organism\") f |>     dplyr::filter(facet == \"organism\") #> # A tibble: 7 × 4 #>   facet    label                 ontology_term_id     n #>   <chr>    <chr>                 <chr>            <int> #> 1 organism Homo sapiens          NCBITaxon:9606    1080 #> 2 organism Mus musculus          NCBITaxon:10090    357 #> 3 organism Callithrix jacchus    NCBITaxon:9483      28 #> 4 organism Macaca mulatta        NCBITaxon:9544      19 #> 5 organism Sus scrofa domesticus NCBITaxon:9825       3 #> 6 organism Pan troglodytes       NCBITaxon:9598       2 #> 7 organism Gorilla gorilla       NCBITaxon:9593       1  db <- db() ds <- datasets(db)  ## datasets with African American females ds |>     dplyr::filter(         facets_filter(self_reported_ethnicity, \"label\", \"African American\"),         facets_filter(sex, \"label\", \"female\")     ) #> # A tibble: 57 × 33 #>    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition #>    <chr>        <chr>              <chr>         <list>   <list> <list>          #>  1 01ad3cd7-39… 02a1eee1-e290-47d… 7d7cabfd-1d1… <chr>    <list> <lgl [1]>       #>  2 bab7432a-5c… 02a8ff13-a08b-461… 72d37bc9-76c… <chr>    <list> <chr [2]>       #>  3 f64e1be1-de… c40911a4-47de-460… 62e8f058-9c3… <chr>    <list> <lgl [1]>       #>  4 e9175006-89… db7b4a79-1d96-4aa… 62e8f058-9c3… <chr>    <list> <lgl [1]>       #>  5 d4cfefa0-3a… 8f7fa4d2-0bbf-41e… 62e8f058-9c3… <chr>    <list> <lgl [1]>       #>  6 d224c8e0-c2… b7d4db11-bca1-4bc… 62e8f058-9c3… <chr>    <list> <lgl [1]>       #>  7 a6858c10-c5… 7e57a225-c979-4fa… 62e8f058-9c3… <chr>    <list> <lgl [1]>       #>  8 576f193c-75… 1ba7d495-c1a8-480… 62e8f058-9c3… <chr>    <list> <lgl [1]>       #>  9 486486d4-94… 090ba5ce-5c7f-473… 62e8f058-9c3… <chr>    <list> <lgl [1]>       #> 10 86b37b3c-1e… f371cb4c-b23a-4ab… 4f586cb6-972… <chr>    <list> <lgl [1]>       #> # ℹ 47 more rows #> # ℹ 27 more variables: cell_count <int>, cell_type <list>, citation <chr>, #> #   default_embedding <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, …  ## datasets with non-European, known ethnicity facets(db, \"self_reported_ethnicity\") #> # A tibble: 34 × 4 #>    facet                   label                          ontology_term_id     n #>    <chr>                   <chr>                          <chr>            <int> #>  1 self_reported_ethnicity European                       HANCESTRO:0005     583 #>  2 self_reported_ethnicity unknown                        unknown            562 #>  3 self_reported_ethnicity na                             na                 401 #>  4 self_reported_ethnicity Asian                          HANCESTRO:0008     149 #>  5 self_reported_ethnicity African American               HANCESTRO:0568      66 #>  6 self_reported_ethnicity Hispanic or Latin American     HANCESTRO:0014      66 #>  7 self_reported_ethnicity Native American,Hispanic or L… HANCESTRO:0013,…    50 #>  8 self_reported_ethnicity African American or Afro-Cari… HANCESTRO:0016      32 #>  9 self_reported_ethnicity Greater Middle Eastern  (Midd… HANCESTRO:0015      23 #> 10 self_reported_ethnicity African                        HANCESTRO:0010      19 #> # ℹ 24 more rows ds |>     dplyr::filter(         !facets_filter(             self_reported_ethnicity, \"label\", c(\"European\", \"na\", \"unknown\")         )     ) #> # A tibble: 28 × 33 #>    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition #>    <chr>        <chr>              <chr>         <list>   <list> <list>          #>  1 cfa3c355-ee… 4dc06a70-6d39-4da… 9c8808ce-113… <chr>    <list> <lgl [1]>       #>  2 a9c5aecf-3b… 579db439-a9dc-4fc… 3116d060-0a8… <chr>    <list> <lgl [1]>       #>  3 6d4b3d09-f1… 431185b3-45d0-4f9… 3116d060-0a8… <chr>    <list> <lgl [1]>       #>  4 1368fad2-91… 724f2fae-92cb-4ed… 3116d060-0a8… <chr>    <list> <lgl [1]>       #>  5 e6a11140-25… dbcbe0a6-918a-444… e5f58829-1a6… <chr>    <list> <lgl [1]>       #>  6 6ec405bb-47… eaf5be60-06d9-45e… e5f58829-1a6… <chr>    <list> <lgl [1]>       #>  7 2ba40233-85… 541ef4e5-8142-496… e5f58829-1a6… <chr>    <list> <lgl [1]>       #>  8 2423ce2c-31… 5ee25df3-0ff9-437… e5f58829-1a6… <chr>    <list> <lgl [1]>       #>  9 2adb1f8a-a6… 7a455e3b-dd79-499… 38833785-fac… <chr>    <list> <lgl [1]>       #> 10 5b25a46f-f1… e1417ade-2dc5-4f2… 126afc71-47f… <chr>    <list> <lgl [1]>       #> # ℹ 18 more rows #> # ℹ 27 more variables: cell_count <int>, cell_type <list>, citation <chr>, #> #   default_embedding <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, …"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query cellxgene collections, datasets, and files — collections","title":"Query cellxgene collections, datasets, and files — collections","text":"files_download() retrieves one cellxgene files cache local system. links(), authors() publisher_metadata() helper functions extract 'nested' information collections.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query cellxgene collections, datasets, and files — collections","text":"","code":"collections(cellxgene_db = db())  datasets(cellxgene_db = db())  datasets_visualize(tbl)  files(cellxgene_db = db())  files_download(tbl, dry.run = TRUE, cache.path = .cellxgene_cache_path())  links(cellxgene_db = db())  authors(cellxgene_db = db())  publisher_metadata(cellxgene_db = db())"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query cellxgene collections, datasets, and files — collections","text":"cellxgene_db optional 'cellxgene_db' object, returned db(). tbl tibble() typically derived datasets(db) files(db) containing columns dataset_id (datasets_visualize()), columns dataset_id, file_id, filetype (files_download()). dry.run logical(1) indicating whether (often large) file(s) tbl downloaded local cache. Files downloaded dry.run = TRUE (default). cache.path character(1) directory cache downloaded files. directory must already exist. default tools::R_user_dir(\"cellxgenedp\", \"cache\"), package-specific path user home directory.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query cellxgene collections, datasets, and files — collections","text":"function returns tibble describing corresponding component database. files_download() returns character() vector paths local files. links() returns tibble external links associated collection. Common links includ DOI, raw data / data sources, lab websites. authors() returns tibble authors associated collection. publisher_metadata() returns tibble publisher metadata (journal, publicate date, doi) associated collection.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query cellxgene collections, datasets, and files — collections","text":"","code":"db <- db()  collections(db) #> # A tibble: 227 × 18 #>    collection_id    collection_version_id collection_url consortia contact_email #>    <chr>            <chr>                 <chr>          <list>    <chr>         #>  1 4828d33d-fb26-4… 3892863c-7057-4a32-a… https://cellx… <chr [1]> anna.molofsk… #>  2 48259aa8-f168-4… 67e75752-53dd-4aec-9… https://cellx… <lgl [1]> wtk22@cam.ac… #>  3 6e067060-f7e4-4… 37be1b6a-2d00-4b28-a… https://cellx… <lgl [1]> William.Zach… #>  4 1ca90a2d-2943-4… 1cb67a11-55b0-4416-9… https://cellx… <chr [2]> edl@allenins… #>  5 31937775-0602-4… e79f335e-ff6b-4c01-8… https://cellx… <lgl [1]> weallen@fas.… #>  6 34f12de7-c5e5-4… 375b0e1c-19d6-42b9-a… https://cellx… <chr [1]> ganier.clari… #>  7 48d354f5-a5ca-4… 8216eda1-79ae-4faf-9… https://cellx… <chr [1]> Nathan.Salom… #>  8 28e9d721-6816-4… c152fcf5-a85a-46c4-9… https://cellx… <lgl [1]> Tom_Mariani@… #>  9 9c8808ce-1138-4… e3c1e670-8e51-499f-a… https://cellx… <lgl [1]> ebutcher@sta… #> 10 37f1f46d-6dfa-4… 731ffc35-11c3-4236-8… https://cellx… <lgl [1]> ecker@salk.e… #> # ℹ 217 more rows #> # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, #> #   description <chr>, doi <chr>, links <list>, name <chr>, #> #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, #> #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date>  collections(db) |>     dplyr::glimpse() #> Rows: 227 #> Columns: 18 #> $ collection_id         <chr> \"4828d33d-fb26-42e7-bf36-18293b0eec85\", \"48259aa… #> $ collection_version_id <chr> \"3892863c-7057-4a32-a538-e5407650881b\", \"67e7575… #> $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/48… #> $ consortia             <list> \"CZ Biohub\", NA, NA, <\"Allen Institute for Brai… #> $ contact_email         <chr> \"anna.molofsky@ucsf.edu\", \"wtk22@cam.ac.uk\", \"Wi… #> $ contact_name          <chr> \"Anna Molofsky\", \"Walid Khaled\", \"William Zachar… #> $ curator_name          <chr> \"Corinn Sophia Small\", \"Jason Hilton\", \"Jason Hi… #> $ description           <chr> \"Microglia are brain resident phagocytes that ca… #> $ doi                   <chr> \"10.1016/j.cell.2024.02.020\", \"10.1038/s41588-02… #> $ links                 <list> [[\"\", \"LAB_WEBSITE\", \"https://www.annamolofskyl… #> $ name                  <chr> \"Type I interferon responsive microglia shape co… #> $ publisher_metadata    <list> [[[\"Escoubas\", \"Caroline C.\"], [\"Dorman\", \"Leah… #> $ revising_in           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ revision_of           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ visibility            <chr> \"PUBLIC\", \"PUBLIC\", \"PUBLIC\", \"PUBLIC\", \"PUBLIC\"… #> $ created_at            <date> 2024-06-09, 2024-06-08, 2024-06-09, 2024-06-08,… #> $ published_at          <date> 2024-04-01, 2023-04-25, 2022-02-23, 2022-05-31,… #> $ revised_at            <date> 2024-06-12, 2024-06-12, 2024-06-12, 2024-06-12,…  datasets(db) |>     dplyr::glimpse() #> Rows: 1,473 #> Columns: 33 #> $ dataset_id                 <chr> \"5dec4249-8459-4df0-8998-37193135754c\", \"be… #> $ dataset_version_id         <chr> \"dea35fd3-c576-4ca5-9c10-72546e312b2e\", \"15… #> $ collection_id              <chr> \"4828d33d-fb26-42e7-bf36-18293b0eec85\", \"48… #> $ donor_id                   <list> <\"pooled_Control_P5\", \"pooled_Deprived_P5\"… #> $ assay                      <list> [[\"10x 3' v3\", \"EFO:0009922\"]], [[\"10x 3' … #> $ batch_condition            <list> NA, \"processing_date\", \"processing_date\", … #> $ cell_count                 <int> 12330, 416825, 352496, 2122065, 25382, 8032… #> $ cell_type                  <list> [[\"microglial cell\", \"CL:0000129\"]], [[\"ca… #> $ citation                   <chr> \"Publication: https://doi.org/10.1016/j.cel… #> $ default_embedding          <chr> \"X_umap\", NA, NA, NA, NA, NA, NA, \"X_umap\",… #> $ development_stage          <list> [[\"Theiler stage 28\", \"MmusDv:0000037\"]], … #> $ disease                    <list> [[\"normal\", \"PATO:0000461\"]], [[\"normal\", … #> $ embeddings                 <list> <\"X_pca\", \"X_umap\">, <\"X_diffmap\", \"X_scVI… #> $ explorer_url               <chr> \"https://cellxgene.cziscience.com/e/5dec424… #> $ feature_biotype            <list> \"gene\", \"gene\", \"gene\", \"gene\", \"gene\", \"g… #> $ feature_count              <int> 23045, 34455, 34455, 15166, 34455, 34455, 1… #> $ feature_reference          <list> \"NCBITaxon:10090\", \"NCBITaxon:9606\", \"NCBI… #> $ is_primary_data            <list> TRUE, FALSE, FALSE, <TRUE, FALSE>, FALSE, … #> $ mean_genes_per_cell        <dbl> 4159.6886, 1639.8527, 2608.0262, 1847.2070,… #> $ organism                   <list> [[\"Mus musculus\", \"NCBITaxon:10090\"]], [[\"… #> $ primary_cell_count         <int> 12330, 0, 0, 551770, 0, 803283, 120042, 0, … #> $ raw_data_location          <chr> \"raw.X\", \"raw.X\", \"raw.X\", \"raw.X\", \"raw.X\"… #> $ schema_version             <chr> \"5.1.0\", \"5.1.0\", \"5.1.0\", \"5.1.0\", \"5.1.0\"… #> $ self_reported_ethnicity    <list> [[\"na\", \"na\"]], [[\"African\", \"HANCESTRO:00… #> $ sex                        <list> [[\"female\", \"PATO:0000383\"], [\"male\", \"PAT… #> $ spatial                    <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ suspension_type            <list> \"cell\", \"cell\", \"cell\", \"cell\", \"cell\", \"c… #> $ tissue                     <list> [[\"barrel cortex\", \"UBERON:0010415\", \"tiss… #> $ title                      <chr> \"Type I interferon responsive microglia sha… #> $ tombstone                  <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F… #> $ x_approximate_distribution <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ published_at               <date> 2024-04-01, 2023-04-25, 2023-04-25, 2024-0… #> $ revised_at                 <date> 2024-06-12, 2024-06-12, 2024-06-12, 2024-0…  # \\donttest{ if (interactive()) {     ## visualize the first dataset     datasets(db) |>         dplyr::slice(1) |>         datasets_visualize() } # } files(db) |>     dplyr::glimpse() #> Rows: 2,693 #> Columns: 4 #> $ dataset_id <chr> \"5dec4249-8459-4df0-8998-37193135754c\", \"5dec4249-8459-4df0… #> $ filesize   <dbl> 239645451, 241723366, 3555862131, 3390479178, 4584229094, 4… #> $ filetype   <chr> \"H5AD\", \"RDS\", \"H5AD\", \"RDS\", \"H5AD\", \"RDS\", \"H5AD\", \"H5AD\"… #> $ url        <chr> \"https://datasets.cellxgene.cziscience.com/dea35fd3-c576-4c…  if (FALSE) { # \\dontrun{ files(db) |>     dplyr::slice(1) |>     files_download(dry.run = FALSE) } # }  ## common links to external data links(db) |>     dplyr::count(link_type) #> # A tibble: 5 × 2 #>   link_type       n #>   <chr>       <int> #> 1 DATA_SOURCE    55 #> 2 LAB_WEBSITE    44 #> 3 OTHER         371 #> 4 PROTOCOL       48 #> 5 RAW_DATA      327  ## authors per collection authors() |>     dplyr::count(collection_id, sort = TRUE) #> # A tibble: 218 × 2 #>    collection_id                            n #>    <chr>                                <int> #>  1 e5f58829-1a66-40b5-a624-9046778e74f5   221 #>  2 8f126edf-5405-4731-8374-b5ce11f53e82   205 #>  3 bcb61471-2a44-4d00-a0af-ff085512674c   171 #>  4 4f586cb6-972b-4ef7-a4ef-3c3800a3c004   147 #>  5 0b9d8a04-bb9d-44da-aa27-705bb65b54eb   135 #>  6 367d95c0-0eb0-4dae-8276-9407239421ee   106 #>  7 6f6d381a-7701-4781-935c-db10d30de293    98 #>  8 1ca90a2d-2943-483d-b678-b809bf464c30    94 #>  9 0a839c4b-10d0-4d64-9272-684c49a2c8ba    90 #> 10 ae1420fe-6630-46ed-8b3d-cc6056a66467    83 #> # ℹ 208 more rows  publisher_metadata() |>     dplyr::glimpse() #> Rows: 218 #> Columns: 9 #> $ collection_id   <chr> \"4828d33d-fb26-42e7-bf36-18293b0eec85\", \"48259aa8-f168… #> $ name            <chr> \"Type I interferon responsive microglia shape cortical… #> $ is_preprint     <lgl> FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE,… #> $ journal         <chr> \"Cell\", \"Nat Genet\", \"Sci. Transl. Med.\", \"bioRxiv\", \"… #> $ published_at    <date> 2024-03-01, 2024-03-28, 2022-03-30, 2023-05-09, 2022-… #> $ published_year  <int> 2024, 2024, 2022, 2023, 2022, 2024, 2021, 2024, 2020, … #> $ published_month <int> 3, 3, 3, 5, 12, 1, 3, 2, 4, 10, 9, 12, 10, 4, 11, 10, … #> $ published_day   <int> 1, 28, 30, 9, 1, 9, 12, 26, 30, 7, 22, 1, 13, 15, 1, 1… #> $ doi             <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…"},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-18","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.8","title":"cellxgenedp 1.8","text":"SIGNIFICANT USER-VISIBLE CHANGES (v 1.7.2) Add vignette ‘Case studies’, include identifying dataset authors using ontolgies identify datasets (v 1.7.1) Update vignette section dataset visualization BUG FIXES (v 1.7.3) Use collections, datasets, files determine available columns","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-16","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.6","title":"cellxgenedp 1.6","text":"SIGNIFICANT USER-VISIBLE CHANGES (v 1.6.1) Update vignette section dataset visualization accomodate changes ‘Discover’ API. https://github.com/mtmorgan/cellxgenedp/issues/15","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-16-1","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.6","title":"cellxgenedp 1.6","text":"(v 1.5.2) use CELLxGENE ‘Discover’ API, changing column names return values. See ‘API changes’ ‘Discover download datasets…’ vignette. BUG FIXES (v 1.6.2) Use collections, datasets, files identifying available columns.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-14","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.4","title":"cellxgenedp 1.4","text":"SIGNIFICANT USER-VISIBLE CHANGES (v 1.3.3) add publisher_metadata(), authors(), links() make access nested ‘collections()’ data straight-forward","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-12","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.2","title":"cellxgenedp 1.2","text":"SIGNIFICANT USER-VISIBLE CHANGES (v. 1.1.4) allow custom files_download() cache. Thanks @stemangiola, https://github.com/mtmorgan/cellxgenedp/pull/9 (v. 1.1.6) datasets ethnicity field renamed self_reported_ethnicity (v. 1.1.7) use zellkonverter’s basilisk-based Python parser read H5AD files vignette, see https://github.com/theislab/zellkonverter/issues/78 (v. 1.1.2) reset cache build machines weekly (v. 1.1.6) use {rjsoncons} CRAN package queries, rather local implementation. Thanks @LiNk-NY, https://github.com/mtmorgan/cellxgenedp/pull/12","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-007","dir":"Changelog","previous_headings":"","what":"cellxgenedp 0.0.7","title":"cellxgenedp 0.0.7","text":"(v. 0.0.7) make errors local cache update accessible; see https://github.com/mtmorgan/cellxgenedp/issues/1","code":""}]
